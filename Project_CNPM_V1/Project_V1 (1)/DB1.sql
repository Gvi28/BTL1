CREATE DATABASE DB1
GO

USE DB1
GO

/***** EMPLOYEE *****/

/* Create Table Employee */
CREATE TABLE Employee(
	ID_EMPLOYEE VARCHAR(10) NOT NULL, 
	FULLNAME NVARCHAR(100) NOT NULL,
	GENDER NVARCHAR(7) NOT NULL,
	DOB DATETIME NOT NULL,
	HOMETOWN NVARCHAR(50) NOT NULL,
	PHONE VARCHAR(12) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	POSITION NVARCHAR(50) NOT NULL
);
ALTER TABLE Employee ADD CONSTRAINT PK_Employee PRIMARY KEY(ID_EMPLOYEE) 

/* Create Table Account */
CREATE TABLE Account(
	ID VARCHAR(10) NOT NULL, 
	USERNAME VARCHAR(10) NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	PERMISSION INT NOT NULL
);
ALTER TABLE Account ADD CONSTRAINT PK_Account PRIMARY KEY(ID) 
ALTER TABLE Account ALTER COLUMN USERNAME VARCHAR(100) NOT NULL

/* Insert NV*/ 
INSERT INTO Employee VALUES ('ADMIN', N'Phạm Huỳnh Anh Thư', N'Nữ', '07/03/2002', N'Đồng Tháp', '0946020824', 'phamthushame2002@gmail.com', N'Quản lý')
/* Insert Account*/ 
INSERT INTO Account VALUES ('ADMIN', 'admin', '12345678', 2)

/* Lay ra so dem ID */
CREATE FUNCTION LAST_ID()
RETURNS INT
AS
BEGIN
	DECLARE @COUNT INT
	SELECT @COUNT =  (SELECT COUNT(ID_EMPLOYEE) FROM Employee WHERE ID_EMPLOYEE LIKE '%NV%')
	RETURN @COUNT
END

/* Lay ra ID */
CREATE FUNCTION GET_ID()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	RETURN  (SELECT TOP 1 ID_EMPLOYEE FROM Employee WHERE ID_EMPLOYEE LIKE '%NV%' ORDER BY ID_EMPLOYEE DESC)
END

/* Tu dong tang ID */
CREATE FUNCTION AUTO_IDNV()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	DECLARE @NID VARCHAR(10)
	SET @ID = dbo.GET_ID()
	DECLARE @COUNT INT 
	SET @COUNT = dbo.LAST_ID()
	IF (@COUNT) = 0
		SET @NID = 'NV000'
	ELSE 
		SET @NID = CASE 
			WHEN @COUNT > 0 AND @COUNT < 9 THEN 'NV00' + CONVERT(CHAR, (CAST(SUBSTRING(@ID, LEN(@ID), 3) AS INT) + 1 ))
			WHEN @COUNT >= 9 THEN 'NV0' + CONVERT(CHAR, (CAST(SUBSTRING(@ID, LEN(@ID), 3) AS INT) + 1 ))
		END
	RETURN @NID		
END

/* Insert NV */
CREATE PROCEDURE INSERT_NV
(@FULLNAME NVARCHAR(100), @GENDER NVARCHAR(7), @DOB DATETIME, 
 @HOMETOWN NVARCHAR(50), @PHONE VARCHAR(12), @EMAIL VARCHAR(50), @POSITION NVARCHAR(50))
AS
BEGIN
	DECLARE @ID_EMPLOYEE VARCHAR(10)
	SET @ID_EMPLOYEE = dbo.AUTO_IDNV()
	INSERT INTO Employee VALUES (@ID_EMPLOYEE, @FULLNAME , @GENDER , @DOB , 
								 @HOMETOWN, @PHONE , @EMAIL , @POSITION)
END
GO

/* Insert Account */
CREATE PROCEDURE INSERT_ACCOUNT
(@USERNAME VARCHAR(10) , @PASSWORD VARCHAR(50), @PERMISSION INT)
AS
BEGIN
DECLARE @ID VARCHAR(10)
	SET @ID = dbo.GET_ID()
	INSERT INTO Account VALUES (@ID, @USERNAME , @PASSWORD , @PERMISSION)
END


/* Update NV */ 
CREATE PROCEDURE UPDATE_NV
(@ID_EMPLOYEE VARCHAR(10), @FULLNAME NVARCHAR(100), @GENDER NVARCHAR(7), @DOB DATETIME, 
 @HOMETOWN NVARCHAR(50), @PHONE VARCHAR(12), @EMAIL VARCHAR(50), @POSITION NVARCHAR(50))
AS
BEGIN
	UPDATE Employee SET 
	FULLNAME = @FULLNAME,
	GENDER = @GENDER, 
	DOB = @DOB, 
	HOMETOWN = @HOMETOWN,
	PHONE = @PHONE, 
	EMAIL = @EMAIL, 
	POSITION = @POSITION
	WHERE ID_EMPLOYEE = @ID_EMPLOYEE
END
GO

/* Update Account */
CREATE PROCEDURE UPDATE_ACCOUNT
(@ID VARCHAR(10), @USERNAME VARCHAR(10) , @PASSWORD VARCHAR(50), @PERMISSION INT)
AS
BEGIN
	UPDATE Account SET 
	USERNAME = @USERNAME,
	PASSWORD = @PASSWORD, 
	PERMISSION = @PERMISSION
	WHERE ID = @ID 
END


/* Test Stored Procdure NV */

/* Test Stored Procdure Account */


/***** EMPLOYEE *****/

/--------------------------------------------------------------------------------------------------------------------/
/***** CUSTOMER *****/

/* Create Table Customer */
CREATE TABLE Customer(
	ID VARCHAR(10) NOT NULL, 
	FULLNAME NVARCHAR(100) NOT NULL,
	GENDER NVARCHAR(7) NOT NULL,
	DOB DATETIME NOT NULL,
	HOMETOWN NVARCHAR(50) NOT NULL,
	PHONE VARCHAR(12) NOT NULL,
);
ALTER TABLE Customer ADD CONSTRAINT PK_Customer PRIMARY KEY(ID) 

/* Create Table CustomerAccount */

/* Insert KH*/ 

/* Insert Account KH*/ 

/* Lay ra so dem ID KH*/
CREATE FUNCTION LAST_IDKH()
RETURNS INT
AS
BEGIN
	DECLARE @COUNT INT
	SELECT @COUNT =  (SELECT COUNT(ID) FROM Customer WHERE ID LIKE '%KH%')
	RETURN @COUNT
END

/* Lay ra ID */
CREATE FUNCTION GET_IDKH()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	RETURN  (SELECT TOP 1 ID FROM Customer WHERE ID LIKE '%KH%' ORDER BY ID DESC)
END

/* Tu dong tang ID */
CREATE FUNCTION AUTO_IDKH()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	DECLARE @NID VARCHAR(10)
	SET @ID = dbo.GET_IDKH()
	DECLARE @COUNT INT 
	SET @COUNT = dbo.LAST_IDKH()
	IF (@COUNT) = 0
		SET @NID = 'KH000'
	ELSE 
		SET @NID = CASE 
			WHEN @COUNT > 0 AND @COUNT < 9 THEN 'KH00' + CONVERT(CHAR, (CAST(SUBSTRING(@ID, LEN(@ID), 3) AS INT) + 1 ))
			WHEN @COUNT >= 9 THEN 'KH0' + CONVERT(CHAR, (CAST(SUBSTRING(@ID, LEN(@ID), 3) AS INT) + 1 ))
		END
	RETURN @NID	
END

/* Insert NV */
CREATE PROCEDURE INSERT_KH
(@FULLNAME NVARCHAR(100), @GENDER NVARCHAR(7), @DOB DATETIME, 
 @HOMETOWN NVARCHAR(50), @PHONE VARCHAR(12))
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	SET @ID = dbo.AUTO_IDKH()
	INSERT INTO Customer VALUES (@ID, @FULLNAME , @GENDER , @DOB , @HOMETOWN, @PHONE)
END
GO

/* Insert Account */
CREATE PROCEDURE INSERT_ACCOUNTKH
(@EMAIL VARCHAR(50), @PASSWORD VARCHAR(50), @PERMISSION INT)
AS
BEGIN
DECLARE @ID VARCHAR(10)
	SET @ID = dbo.GET_IDKH()
	INSERT INTO Account VALUES (@ID, @EMAIL, @PASSWORD, @PERMISSION)
END


/* Test Stored Procdure KH */

/***** CUSTOMER *****/


/* Select 
SELECT *FROM Employee
SELECT *FROM Account
SELECT *FROM Customer
*/

/* DELETE FROM Customer WHERE ID = 'KH000' */
/* Drop
DROP FUNCTION [dbo].[LAST_ID]
DROP FUNCTION [dbo].[GET_ID]
DROP FUNCTION [dbo].[AUTO_IDNV] 
DROP PROCEDURE [dbo].[INSERT_NV]
DROP PROCEDURE [dbo].[INSERT_ACCOUNT]
DROP PROCEDURE [dbo].[UPDATE_NV]
DROP PROCEDURE [dbo].[UPATE_ACCOUNT]

DROP FUNCTION [dbo].[LAST_IDKH]
DROP FUNCTION [dbo].[AUTO_IDKH] 
DROP PROCEDURE [dbo].[INSERT_KH]
DROP PROCEDURE [dbo].[INSERT_ACCOUNTKH]
*/

/* 
DELETE FROM Employee WHERE ID_EMPLOYEE LIKE '%NV%'
DELETE FROM Account WHERE ID LIKE '%NV%'
*/
